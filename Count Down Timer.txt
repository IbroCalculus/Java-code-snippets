------ Method 1. Using thread.sleep()----------
        for (int i=3; i>=0; i--){
            System.out.println(i);
            Thread.sleep(1000);				//milliseconds
        }


--- Other method (More functionality) -----
==== START COUNTDOWN IMMEDIATELY (0) OR SOME MILLISECONDS AFTER CODE EXECUTIONS =============

            int counter = 10;
            @Override
            public void run() {
                if(counter > 0){
                    System.out.println(counter + " Seconds Remaining");
                    counter--;
                }else{
                    System.out.println("COUNTDOWN COMPLETED!");
                    timer.cancel();
                }
            }
        };

        timer.scheduleAtFixedRate(timerTask, 0, 1000); 		//timertask, start_time_in_milliseconds, repetion_time_in_milliseconds


==== START COUNTDOWN SOME DATE AFTER CODE EXECUTIONS =============

            int counter = 10;
            @Override
            public void run() {
                if(counter > 0){
                    System.out.println(counter + " Seconds Remaining");
                    counter--;
                }else{
                    System.out.println("COUNTDOWN COMPLETED!");
                    timer.cancel();
                }
            }
        };

        Calendar date = Calendar.getInstance();
        date.set(Calendar.YEAR, 2021);
        date.set(Calendar.MONTH, Calendar.MARCH);
        date.set(Calendar.DAY_OF_MONTH, 9);
        date.set(Calendar.HOUR_OF_DAY, 8);
        date.set(Calendar.MINUTE, 57);
        date.set(Calendar.SECOND, 0);
        date.set(Calendar.MILLISECOND, 0);

        timer.scheduleAtFixedRate(timerTask, date.getTime(), 1000);		//timertask, start_date, repetion_time_in_milliseconds