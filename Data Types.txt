
NB: int x = Integer.MAX_VALUE, Byte.MAX_VALUE etc shows the maximum value those data types can take. ie For Byte it is 127



DATA TYPE CONVERSION
1- Implicit data type conversion: Save a smaller range value in higher range value. E.g from int to long, from long to float.
2- Explicit data type conversion: Opposite of implicit. E.g: float x = (float) b. Where b is a double

A primitive-type variable can store exactly one value of its declared type at a time
Reference(Non-primitive)-type variable store the location of an object in the computer's memory. ie String, Arrays, Classes, Interfaces, Enum etc

THERE ARE TWO DATA TYPES:
	- Primitive (hold single values, with no special capability), and
	- Reference(Non-primitive) data type
There are 8 primitive datatypes; (others) and 1 reference datatype (String). ie:
boolean, byte, char, short, int, long, float and double

Check Amigos about 55:00
=== PRIMITIVE DATA TYPE ===
byte	1 byte	Stores whole numbers from -128 to 127
short	2 byte	Stores whole numbers from -32,768 to 32,767
int	4 bytes	Stores whole numbers from ...		int number = 5;			//
long	8 bytes	Stores whole numbers from -32,768 to 32,767	long number = 5L; 		//More int numbers
float	4 bytes	Stores whole numbers from -32,768 to 32,767	float number = (float) 5.2 or 3.5f	//float are double by defalut, hence; cast
		double number = 5.2; 		//More float
		char something = 'M';
		char something = 'u\00AE';	//Special unicode symbol for registered
		char something = '\u00A9';	//Special unicode symbol for copyright
	CHECK OTHER UNICODE SYMBOLS

=== REFERENCE DATA TYPE ===


=== GETTING SIZE OF A DATA TYPE ====
        System.out.println("MAX INT: " + Integer.MAX_VALUE);
        System.out.println("MIN BYTE: " + Byte.MIN_VALUE);


=== CONVERTING INTEGER DATATYPES TO BINARY ====
        System.out.println("Binary equivalent of Decimal: " + 100 + " is = " + value);



 ============= GETTING THE DATATYPE OF A VALUE =============

        String x = "sample";
        int y = 2345;

        System.out.println(x.getClass().getSimpleName() );   //OUTPUT: String.   
        System.out.println(y.getClass().getSimpleName() );   //OUTPUT: Integer

        if((((Object) y).getClass().getSimpleName()).equals("String")){
            System.out.println("Type is string");
        }else if((((Object) y).getClass().getSimpleName()).equals("Integer")){
            System.out.println("Type is integer");
        }

 ============= COMPARE THE DATATYPE OF A VALUE (ie check if it is an integer, string, etc) =============

NB: Every variable must be of type wrapper (ie Integer instead of int, BOOLEAN instead of boolean, Character instead of char, etc. CHECK Wrapper Class.PNG

        String x = "sample";
        Integer y = 2345;
        Boolean choice = false;
        Float f = 456.78f;

        System.out.println("y is an integer: " + (y instanceof Integer));
        System.out.println("choice is a boolean value: " + (choice instanceof Boolean));
        System.out.println("f is a double: " + (f instanceof Float));     


